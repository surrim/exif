<?php

/**
 * @file
 * Primary hook implementations for the Exif module.
 */

use Drupal\Core\Url;
use Drupal\exif\ExifHelp;
use Drupal\exif\ExifContent;
use Drupal\node\NodeInterface;
use Drupal\media\MediaInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function exif_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.exif':
      return ExifHelp::content();

    // Extra instructional information for the main settings page.
    case 'exif.config':
      $output = '<p>' . t('If a media type or content type has not been created for photographs, take a look at <a href=":url">the quick start page</a>.', [
        ':url' => Url::fromRoute('exif.helper')->toString(),
        ]) . '</p>';
      $output .= '<p>' . t('To have a sample of metadata content, take a look at <a href=":url">the sample page</a>.', [
          ':url' => Url::fromRoute('exif.sample')->toString(),
        ]) . '</p>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function exif_theme() {
  return [
    'exif_sample' => [
      'variables' => [
        'taxonomy' => 'http://drupal.org/handbook/modules/taxonomy/',
        'image_path' => NULL,
        'metadata' => NULL,
      ],
      'template' => 'exif_sample',
    ],
    'exif_helper_page' => [
      'variables' => [
        'message' => NULL,
        'taxonomy' => 'http://drupal.org/handbook/modules/taxonomy/',
      ],
      'template' => 'exif_helper_page',
    ],
  ];
}

/**
 * Implements hook_entity_presave().
 *
 * Calculate the value for each metadata field so they can be stored correctly.
 */
function exif_entity_presave(EntityInterface $entity) {
  $entityType = '';
  if ($entity instanceof NodeInterface) {
    $entityType = 'node';
  }
  else {
    if (Drupal::moduleHandler()
      ->moduleExists("media") && $entity instanceof MediaInterface) {
      $entityType = 'media';
    }
  }
  if ($entityType != '') {
    $config = \Drupal::config('exif.settings');
    $shouldUpdateMetadata = $config->get('update_metadata');
    if (!isset($shouldUpdateMetadata)) {
      $shouldUpdateMetadata = TRUE;
    }
    $inserting = !isset($entity->original);
    if ($inserting || $shouldUpdateMetadata) {
      $exifContentHandler = new ExifContent();
      $exifContentHandler->entity_insert_update($entityType, $entity);
    }
  }
}

/**
 * Implements hook_entity_create().
 */
function exif_entity_create(EntityInterface $entity) {
  $entityType = '';
  if ($entity instanceof NodeInterface) {
    $entityType = 'node';
  }
  else {
    if (Drupal::moduleHandler()
      ->moduleExists("media") && $entity instanceof MediaInterface) {
      $entityType = 'media';
    }
  }

  if ($entityType != '') {
    $config = \Drupal::config('exif.settings');
    $shouldUpdateMetadata = $config->get('update_metadata');
    if (!isset($shouldUpdateMetadata)) {
      $shouldUpdateMetadata = TRUE;
    }
    $inserting = !isset($entity->original);
    if ($inserting || $shouldUpdateMetadata) {
      $exifContentHandler = new ExifContent();
      $exifContentHandler->checkTitle($entityType, $entity);
    }
  }
}
